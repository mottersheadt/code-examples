data:
  - attributes:
      created_at: '2021-04-26T09:55:37'
      destination_override_endpoint: 'https://echo.apps.verygood.systems'
      entries:
        - classifiers: {}
          config:
            condition: AND
            rules:
              - condition: null
                expression:
                  field: PathInfo
                  operator: matches
                  type: string
                  values:
                    - /post
              - condition: null
                expression:
                  field: ContentType
                  operator: equals
                  type: string
                  values:
                    - application/json
          id: 3e4ca047-23e2-4397-9a67-d673cedf4cc8
          id_selector: null
          operation: REDACT
          operations:
            - name: github.com/verygoodsecurity/common/compute/larky/http/Process
              parameters:
                script: |-
                  load("@stdlib//base64", base64="base64")
                  load("@stdlib//builtins", builtins="builtins")
                  load("@stdlib//json", json="json")
                  load("@stdlib//larky", larky="larky")
                  load("@vendor//Crypto/Cipher/AES", AES="AES")
                  load("@vgs//vault", "vault")

                  def process(input, ctx):
                    TAG_LENGTH = 8
                    session_key = b'vbfhg768ghvbfhg768ghvbfhg768gh12'
                    nonce = b'asd456fgh012'

                    body_str = str(input.body)
                    body = json.loads(body_str)

                    # GCM:
                    cipher_aes = AES.new(session_key, AES.MODE_GCM, nonce=nonce, mac_len=TAG_LENGTH)
                    ciphertext, tag = cipher_aes.encrypt_and_digest(builtins.bytes(body_str, 'utf-8'))
                    ciphertext_tag = b"".join([cipher_aes.nonce, ciphertext, tag])
                    ciphertext_b64_GCM = base64.b64encode(ciphertext_tag).decode('utf-8')
                    # decrypt:
                    cipher = AES.new(session_key, AES.MODE_GCM, nonce=nonce)
                    plaintext = cipher.decrypt(ciphertext)
                    body['GCM'] = ciphertext_b64_GCM
                    body['GCM_decrypted'] = json.loads(str(plaintext))

                    # CCM:
                    cipher_aes = AES.new(session_key, AES.MODE_CCM, nonce=nonce, mac_len=TAG_LENGTH)
                    ciphertext, tag = cipher_aes.encrypt_and_digest(builtins.bytes(body_str, 'utf-8'))
                    ciphertext_tag = b"".join([cipher_aes.nonce, ciphertext, tag])
                    ciphertext_b64_CCM = base64.b64encode(ciphertext_tag).decode('utf-8')
                    # decrypt:
                    cipher = AES.new(session_key, AES.MODE_CCM, nonce=nonce)
                    plaintext = cipher.decrypt(ciphertext)
                    body['CCM'] = ciphertext_b64_CCM
                    body['CCM_decrypted'] = json.loads(str(plaintext))

                    body.pop('card_number')
                    input.body = builtins.bytes(json.dumps(body))
                    return input
          phase: REQUEST
          public_token_generator: UUID
          targets:
            - body
          token_manager: PERSISTENT
          transformer: JSON_PATH
          transformer_config:
            - $.email
          transformer_config_map: null
      host_endpoint: (.*)\.verygoodproxy\.com
      id: c891d346-0e1b-49b8-99ac-0754d34f14f2
      ordinal: null
      port: 80
      protocol: http
      source_endpoint: '*'
      tags:
        name: echo.apps.verygood.systems-steel-blue-parallelogram
        source: RouteContainer
      updated_at: '2021-05-07T11:45:32'
    id: c891d346-0e1b-49b8-99ac-0754d34f14f2
    type: rule_chain
version: 1
